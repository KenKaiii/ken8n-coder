{
  "name": "Gmail Email Scoring to Telegram",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "labelIds": ["INBOX"],
          "q": "is:unread"
        },
        "format": "resolved"
      },
      "id": "ac8c2772-ac7b-4c3b-9789-7b8c4a5d6e7f",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [240, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const emailData = $input.all();\nconst results = [];\n\nfor (const item of emailData) {\n  const email = item.json;\n  const subject = email.subject || '';\n  const bodyText = email.textPlain || email.textHtml || '';\n  const sender = email.from?.value?.[0]?.address || '';\n  \n  let score = 0;\n  let reasons = [];\n  \n  const urgentKeywords = ['urgent', 'asap', 'emergency', 'critical', 'deadline', 'important'];\n  const spamKeywords = ['free', 'limited time', 'act now', 'click here', 'winner'];\n  const workKeywords = ['meeting', 'project', 'deadline', 'review', 'proposal'];\n  \n  const combinedText = (subject + ' ' + bodyText).toLowerCase();\n  \n  urgentKeywords.forEach(keyword => {\n    if (combinedText.includes(keyword)) {\n      score += 3;\n      reasons.push(`Urgent: ${keyword}`);\n    }\n  });\n  \n  workKeywords.forEach(keyword => {\n    if (combinedText.includes(keyword)) {\n      score += 2;\n      reasons.push(`Work: ${keyword}`);\n    }\n  });\n  \n  spamKeywords.forEach(keyword => {\n    if (combinedText.includes(keyword)) {\n      score -= 2;\n      reasons.push(`Spam indicator: ${keyword}`);\n    }\n  });\n  \n  if (sender.includes('noreply') || sender.includes('no-reply')) {\n    score -= 1;\n    reasons.push('Automated sender');\n  }\n  \n  if (bodyText.length > 1000) {\n    score += 1;\n    reasons.push('Detailed content');\n  }\n  \n  let priority;\n  if (score >= 5) priority = 'HIGH';\n  else if (score >= 2) priority = 'MEDIUM';\n  else priority = 'LOW';\n  \n  results.push({\n    json: {\n      originalEmail: email,\n      score: score,\n      priority: priority,\n      reasons: reasons,\n      subject: subject,\n      sender: sender,\n      receivedDate: email.date\n    }\n  });\n}\n\nreturn results;"
      },
      "id": "bd9d3883-be8c-4d4c-a890-8c9d5b6e7f8g",
      "name": "Email Scoring Logic",
      "type": "@kenkaiii/n8n-nodes-supercode.superCodeNodeVmSafe",
      "typeVersion": 1,
      "position": [480, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "high-priority",
              "leftValue": "={{ $json.priority }}",
              "rightValue": "HIGH",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ce0e4994-cf9d-5e5d-b901-9d0e6c7f8a9h",
      "name": "Filter High Priority",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [720, 300]
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "üö® High Priority Email Alert\n\nüìß Subject: {{ $json.subject }}\nüë§ From: {{ $json.sender }}\n‚≠ê Score: {{ $json.score }}\nüéØ Priority: {{ $json.priority }}\nüìÖ Received: {{ $json.receivedDate }}\n\nüìù Scoring Reasons:\n{{ $json.reasons.join('\\n‚Ä¢ ') }}\n\n#EmailAlert #HighPriority"
      },
      "id": "df1f50a5-d0ae-6f6e-c012-ae1f7d8e9b0i",
      "name": "Send Telegram Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [960, 220],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "üì¨ Email Summary\n\nüìß Subject: {{ $json.subject }}\nüë§ From: {{ $json.sender }}\n‚≠ê Score: {{ $json.score }}\nüéØ Priority: {{ $json.priority }}\nüìÖ Received: {{ $json.receivedDate }}\n\n#EmailSummary"
      },
      "id": "e020601b-e1bf-707f-d123-bf208f9fa1bj",
      "name": "Send Summary",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [960, 380],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot"
        }
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Email Scoring Logic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Scoring Logic": {
      "main": [
        [
          {
            "node": "Filter High Priority",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter High Priority": {
      "main": [
        [
          {
            "node": "Send Telegram Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-16T00:00:00.000Z",
  "versionId": "1"
}
